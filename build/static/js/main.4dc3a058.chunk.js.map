{"version":3,"sources":["components/Error.jsx","components/Pregunta.jsx","components/Formulario.jsx","components/Gasto.jsx","components/Listado.jsx","helpers.js","components/ControlPresupuesto.jsx","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","protoTypes","PropTypes","string","isRequired","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","func","Formulario","guardarGasto","guardarCrearGasto","nombre","guardarNombre","trim","gasto","id","shortid","generate","Gasto","object","Listado","gastos","map","array","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","number","App","mostrarpregunta","guardarGastos","creargasto","useEffect","presupuestoRestante","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4dc3a058.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Error = ({mensaje}) => ( \r\n    <p className=\"alert alert-danger error\">{mensaje}</p>\r\n );\r\n\r\nError.protoTypes = {\r\n  mensaje: PropTypes.string.isRequired\r\n};\r\n \r\nexport default Error;","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Error from './Error';\r\n\r\nconst Pregunta = ({ guardarPresupuesto, guardarRestante, actualizarPregunta }) => {\r\n\r\n    // definir el state\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    // Función que lee el presupuesto\r\n    const definirPresupuesto = e => { \r\n       guardarCantidad( parseInt(e.target.value, 10)) \r\n    }\r\n\r\n    // Submit para definir el presupuesto\r\n    const agregarPresupuesto = e => { \r\n        e.preventDefault();\r\n\r\n        // Validar\r\n        if (cantidad < 1 || isNaN( cantidad )) { \r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        // si se pasa la validación\r\n        guardarError(false);\r\n        guardarPresupuesto(cantidad);\r\n        guardarRestante(cantidad);\r\n        actualizarPregunta(false);\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h2>Coloca tu presupuesto</h2>\r\n\r\n            { error ? <Error mensaje=\"El Presupuesto es Incorrecto\" /> : null }\r\n\r\n            <form\r\n                onSubmit={agregarPresupuesto}\r\n            >\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Coloca tu presupuesto\"\r\n                    onChange={definirPresupuesto}\r\n                />\r\n\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"button-primary u-full-width\"\r\n                    value=\"Definir Presupuesto\"\r\n                />\r\n            </form>\r\n        </Fragment>\r\n     );\r\n}\r\n\r\nPregunta.protoTypes = {\r\n  guardarPresupuesto: PropTypes.func.isRequired,\r\n  guardarRestante: PropTypes.func.isRequired,\r\n  actualizarPregunta: PropTypes.func.isRequired,\r\n};\r\n \r\nexport default Pregunta;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Error from './Error';\r\nimport shortid from 'shortid';\r\n\r\nconst Formulario = ({guardarGasto, guardarCrearGasto}) => {\r\n\r\n    const [nombre, guardarNombre] = useState('');\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    // cuando el usuario agrega un gasto\r\n    const agregarGasto = e => { \r\n        e.preventDefault();\r\n\r\n        // validar\r\n        if (cantidad < 1 || isNaN(cantidad) || nombre.trim() === '') { \r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n\r\n        // construir el gasto\r\n        const gasto = {\r\n            nombre,\r\n            cantidad,\r\n            id: shortid.generate()\r\n        }\r\n\r\n        // pasar el gasto al componente principal\r\n        guardarGasto(gasto);\r\n        guardarCrearGasto(true);\r\n\r\n        // resetear  el form \r\n        guardarNombre('');\r\n        guardarCantidad(0);\r\n\r\n    }\r\n\r\n    return ( \r\n        <form\r\n            onSubmit={agregarGasto}\r\n        >\r\n            <h2>Agregar tus gastos aquí</h2>\r\n\r\n            { error ? <Error mensaje=\"Ambos campos son obligatorios o Presupuesto Incorrecto\" /> : null }\r\n\r\n            <div className=\"campo\">\r\n                <label>Nombre Gasto</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. Transporte\"\r\n                    value={nombre}\r\n                    onChange={e => guardarNombre(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"campo\">\r\n                <label>Cantidad Gasto</label>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. 300\"\r\n                    value={cantidad}\r\n                    onChange={e => guardarCantidad( parseInt(e.target.value, 10) )}\r\n                />\r\n            </div>\r\n\r\n            <input\r\n                type=\"submit\"\r\n                className=\"button-primary u-full-width\"\r\n                value=\"Agregar Gasto\"\r\n            />\r\n\r\n        </form>\r\n     );\r\n}\r\n\r\nFormulario.protoTypes = {\r\n  guardarGasto: PropTypes.func.isRequired,\r\n  guardarCrearGasto: PropTypes.func.isRequired\r\n};\r\n \r\nexport default Formulario;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Gasto = ({gasto}) => ( \r\n    <li className=\"gastos\">\r\n        <p>\r\n            {gasto.nombre}\r\n            <span className=\"gasto\">$ {gasto.cantidad}</span>\r\n        </p>\r\n    </li>\r\n );\r\n\r\n   \r\nGasto.protoTypes = {\r\n  gasto: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Gasto;\r\n","import React from 'react';\r\nimport Gasto from './Gasto';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Listado = ({gastos}) => (\r\n    <div className=\"gastos-realizados\">\r\n        <h2>Listado</h2>\r\n        {gastos.map(gasto => (\r\n            <Gasto\r\n                key={gasto.id}\r\n                gasto={gasto}\r\n            />\r\n        ))}\r\n    </div>\r\n);\r\n  \r\nListado.protoTypes = {\r\n    gastos: PropTypes.array.isRequired\r\n}\r\n\r\n \r\nexport default Listado;","export const revisarPresupuesto = (presupuesto, restante) => { \r\n    let clase;\r\n\r\n    if ((presupuesto / 4) > restante) { \r\n        clase = 'alert alert-danger';\r\n    } else if ((presupuesto / 2) > restante) { \r\n        clase = 'alert alert-warning';\r\n    } else { \r\n        clase = 'alert alert-success';\r\n    }\r\n\r\n    return clase;\r\n}","import React, { Fragment } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { revisarPresupuesto } from '../helpers';\r\n\r\nconst ControlPresupuesto = ({ presupuesto, restante }) => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"alert alert-primary\">\r\n                Presupuesto: $ {presupuesto}\r\n            </div>\r\n\r\n            <div className={ revisarPresupuesto(presupuesto, restante) }>\r\n                Restante:   $ {restante}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nControlPresupuesto.protoTypes = {\r\n  presupuesto: PropTypes.number.isRequired,\r\n  restante: PropTypes.number.isRequired\r\n};\r\n\r\n \r\nexport default ControlPresupuesto;","import React, { useState, useEffect } from 'react';\nimport Pregunta from './components/Pregunta';\nimport Formulario from './components/Formulario';\nimport Listado from './components/Listado';\nimport ControlPresupuesto from './components/ControlPresupuesto';\n\nfunction App() {\n\n  // definir el state\n  const [ presupuesto, guardarPresupuesto ] = useState(0);\n  const [ restante, guardarRestante ] = useState(0);\n  const [ mostrarpregunta, actualizarPregunta ] = useState(true);\n  const [ gastos, guardarGastos ] = useState([]);\n  const [ gasto, guardarGasto ] = useState({});\n  const [ creargasto, guardarCrearGasto ] = useState(false);\n\n  // useEffect que actualiza el restante\n  useEffect(() => {\n    if (creargasto) { \n        \n      // agrega el nuevo presupuesto\n        guardarGastos([\n          ...gastos,\n          gasto\n        ]);\n      \n        // resta del presupuesto actual\n        const presupuestoRestante = restante - gasto.cantidad;\n        guardarRestante(presupuestoRestante);\n        \n        // Resetear a false\n        guardarCrearGasto(false);\n     }\n  }, [gasto, creargasto, gastos, restante]);\n\n  return (\n    <div className=\"container\"> \n      <header>\n        <h1>Gasto Semanal</h1>\n        <div className=\"contenido-principal contenido\">\n        {mostrarpregunta ?\n          (\n            <Pregunta\n              guardarPresupuesto={guardarPresupuesto}\n              guardarRestante={guardarRestante}\n              actualizarPregunta={actualizarPregunta}\n            />  \n          ) :\n          (\n          \n            <div className=\"row\">\n              <div className=\"one-half column\">\n                  <Formulario\n                    guardarGasto={guardarGasto}\n                    guardarCrearGasto={guardarCrearGasto}\n                  />\n              </div>\n              <div className=\"one-half column\">\n                  <Listado\n                    gastos={gastos}\n                  />\n\n                  <ControlPresupuesto\n                    presupuesto={presupuesto}\n                    restante={restante}\n                  />\n              </div>\n            </div>\n          )\n        }\n        </div>\n      </header>\n    </div> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}